@using TAhub.Models
@model TAhub.Models.LoginInfo
<div class="container">
    @using (Html.BeginForm("Login", "Home", FormMethod.Post))
    {
        @Html.AntiForgeryToken()
        <div class="input" align="center">
            <!--Title-->
            <h1 class="title">Login</h1>
            <!--User's Type-->
            <div class="form-group" align="center">
                <div class="col-md-10 input-group">
                    <span class="input-group-addon"><i class='fas fa-id-card-alt'></i></span>
                    @Html.EnumDropDownListFor(model => model.User, null, new { @id = "user-type", @class = "loginInfo form-control" })
                </div>
                @Html.ValidationMessageFor(model => model.User, "", new { @class = "text-danger", @id = "user-type-validation" })
            </div>
            <!--User's Email-->
            <div class="form-group" align="center">
                <div class="col-md-10 input-group">
                    <span class="input-group-addon"><i class="glyphicon glyphicon-user"></i></span>
                    @Html.EditorFor(model => model.Username, new { htmlAttributes = new { @class = "form-control", @placeholder = "WSU Email..." } })
                </div>
                @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger", @id = "email-validation" })
            </div>
            <!--User's Password-->
            <div class="form-group" align="center">
                <div class="col-md-10 input-group">
                    <span class="input-group-addon"><i class="glyphicon glyphicon-lock"></i></span>
                    @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control", @placeholder = "Password...", @type = "password" } })
                    <span id="eye" class="input-group-addon"><span class="glyphicon glyphicon-eye-close"></span></span>
                </div>
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger", @id = "password-validation" })
            </div>
            <!--Button/Hyperlink Input Container-->
            <div class="input-group">
                <button type="submit" class="btn btn-primary" id="login-btn">Login</button>
                <h4>or</h4>
                <a id="create-link" data-toggle="modal" data-target="#create-modal">Create an Account</a>
                <!-- Modal -->
                <div class="modal fade" id="create-modal" role="dialog">
                    <div class="modal-dialog">
                        <!-- Modal content-->
                        <div class="modal-content">
                            <div class="modal-header">
                                <button type="button" class="close" data-dismiss="modal">&times;</button>
                                <h4 class="modal-title">Who are you?</h4>
                            </div>
                            <div class="modal-body">
                                @Html.ActionLink("TA", "Create", "TA", null, new { @class = "btn btn-default modal-btn" })
                                @Html.ActionLink("Professor", "Create", "Professor", null, new { @class = "btn btn-default modal-btn" })
                            </div>
                            <div class="modal-footer">
                                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
</div>
<script type="text/javascript">
    $(function () {
        //Background Image
        $("body").css('background-image', 'url(@Url.Content("~/Images/BG_IMG_8.jpg"))');
        //Adds an option called "Select One..." that is unclickable to all the dropdowns (select) on the page
        $("select").append("<option selected disabled hidden>Select One...</option>");
        $("select option[value*='2']").remove();
        //Incase an Issue has occured in the backend while processing the users request
        var dangerText = '@Model.Notifications';
        var checkText = dangerText.replace(/[^A-Z0-9]/ig, "");
        if (checkText !== "") {
            $(".alert-danger h3").text(dangerText);
            $(".alert-danger").show();
        }
        validateInput();
    });

    $("#eye").click(function () {
        var type = document.getElementById("Password").getAttribute("type");
        if (type === "password") {
            $("#eye span").removeClass("glyphicon-eye-close").addClass("glyphicon-eye-open");
            $("#Password").attr('type', 'text');
        } else {
            $("#eye span").removeClass("glyphicon-eye-open").addClass("glyphicon-eye-close");
            $("#Password").attr('type', 'password');
        }
    });

    //Validates all user Input to ensure they enter appropriate values for each input section
    var validateInput = function () {
        $("#login-btn").click(function (event) {
            var isValid = true;
            //Email Validation Variables
            var email = $("#Username").val();
            var emailHtml = $("#email-validation");
            //Password Validation Variables
            var password = $("#Password").val();
            var passwordHtml = $("#password-validation");
            //User Type Validation Variables
            var user = $("select option:selected").text();
            //Sets the CSS values for the invalid input mesages displayed to the user
            var userHtml = $("#user-type-validation");
            $("#password-validation, #email-validation, #user-type-validation").css({
                "font-weight": "bold",
                "color": "firebrick",
                "background-color": "rgba(255,255,255,.7)"
            });
            //Email Validation Conditional
            if (!email.includes("wsu.edu")) {
                isValid = false;
                emailHtml.text("Email must end with @@wsu.edu");
            }
            else {
                emailHtml.text("");
            }
            //Password Validation Conditional
            if (password.length < 8) {
                isValid = false;
                passwordHtml.text("Password must be at least 8 characters long");
            }
            else {
                passwordHtml.text("");
            }
            //User Type Validation Conditional
            if (user === "Select One..." || user === "") {
                isValid = false;
                userHtml.text("Please select an option from the drop down");
            }
            else {
                userHtml.text("");
            }
            //If any of the above inputs had an invalid value entered, this conditional is triggered
            if (!isValid) {
                //Prevents the submit button from "Submitting" the form as it was intended to do
                event.preventDefault();
            }
        })
    };
</script>

<style type="text/css">
    /*all of dotted box*/
    .input {
        width: 60%;
        margin: auto;
        height: 500px;
        border: solid 5px orange;
        border-top: none;
        background-color: white;
        background: rgba(255,255,255, 0.9);
    }
    @@media only screen and (max-width: 700px){
        .input {
            width: 80%;
        }
        .input-group #login-btn{
            width: 50% !important;
        }
    }
    @@media only screen and (max-width: 420px){
        .input {
            width: 100%;
            height: 100%;
            padding-bottom: 10px;
        }
        #eye {
            font-size: .9em !important;
            width: 10% !important;
        }
        .input-group #login-btn {
            width: 60% !important;
        }
        .input-group {
            width: 80% !important;
        }
        .modal-body a{
            width: 80% !important;
        }
    }
    /*Login title*/
    .title {
        text-align: center;
        font-weight: bold;
        color: black;
        border-bottom: solid 5px orange;
        width: 60%;
        margin: 0px auto 50px auto;
        padding-bottom: 20px;
    }
    /*Input containers*/
    .input-group {
        width: 45%;
        margin: 10px auto;
    }
    /*All text input on page*/
    .input-group #user-type{
        width: 100%;
        margin: 0 auto;
        font-size: 1.2em;
        font-weight: bold;
    }
    .input-group-addon{
        width: 20%;
    }
    /*Login Button*/
    .input-group #login-btn {
        width: 40%;
        background-color: darkorange;
        color: white;
        border: none;
        font-weight: bold;
        font-size: 1.3em;
    }
    .input-group > #create-link{
        font-weight:bold;
        color:black;
        font-size: 1.3em;
        text-decoration: none;
    }
    .input-group > #login-btn:hover {
        opacity: .5;
        background-color: darkorange;
    }
    .input-group > #create-link:hover {
        opacity: .5;
    }
    .modal-btn {
        background-color: darkorange;
        color: white;
        width: 30%;
        font-weight: bold;
        font-size: 1.3em;
    }
    .modal-btn:hover {
        opacity: .5;
        background-color: darkorange;
    }
    .modal {
        top: 100px;
    }
    select option{
        text-align: center;
        border: solid 2px black;
    }
    #eye {
        font-size: 1.2em;
        width: 10% !important;
    }
</style>

